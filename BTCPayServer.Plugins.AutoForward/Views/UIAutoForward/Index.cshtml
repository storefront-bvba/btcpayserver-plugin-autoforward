@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.Client.Models
@using BTCPayServer.Components
@using BTCPayServer.Plugins.AutoForward.Views
@using BTCPayServer.Plugins.Template.Views
@using BTCPayServer.Services
@using BTCPayServer.Services.Invoices
@using BTCPayServer.Views.Server
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using NBitcoin
@inject DisplayFormatter DisplayFormatter
@model BTCPayServer.Plugins.Template.PluginPageViewModel
@{
    ViewData.SetActivePage(PluginNavPages.Index, "Auto-Forward Payments");
}

<div class="sticky-header-setup"></div>
<div class="sticky-header d-sm-flex align-items-center justify-content-between">
    <h2 class="mb-0">
        @ViewData["Title"]
    </h2>
    <nav id="SectionNav">
            <div class="nav">
                <a id="SectionNav-@AutoForwardNavPages.Invoices" class="nav-link @ViewData.IsActivePage(AutoForwardNavPages.Invoices)" asp-action="Index">Auto-Forwardable Invoices</a>
                <a id="SectionNav-@AutoForwardNavPages.Payouts" class="nav-link @ViewData.IsActivePage(AutoForwardNavPages.Payouts)" asp-action="Payouts">Payouts</a>
            </div>
        </nav>
    
    @* 
    TODO add support to manually create an auto-forwardable invoice?
    <a id="CreateNewInvoice" asp-action="CreateInvoice" asp-route-storeId="@Model.StoreId" asp-route-searchTerm="@Model.SearchTerm" class="btn btn-primary mt-3 mt-sm-0"> *@
    @*     <span class="fa fa-plus"></span> *@
    @*     Create Invoice *@
    @* </a> *@

</div>

<p>This page shows all invoices that have auto-forwarding enabled. For an invoice to be "auto-forwardable", they need to have these 2 metadata fields:</p>
<ul>
    <li>
        <strong>autoForwardToAddress</strong>
        Contains a valid destination where to forward the funds to
    </li>
    <li>
        <strong>autoForwardPercentage</strong>
        Contains the percentage to auto-forward written as a number between 0 and 1
    </li>
</ul>
<p>Creating these invoices is currently only possible using the Greenfield API. For example:</p>
<pre>
curl -v --header "Authorization: token YOUR_API_KEY_COMES_HERE" --data '{amount: 50, metadata: { autoForwardToAddress: "abc", autoForwardPercentage: 0.99 }}' --header "Content-Type: application/json" http://127.0.0.1:14142/api/v1/stores/YOUR_STORE_ID_COMES_HERE/invoices
</pre>


<h2>Invoices</h2>
<div class="table-responsive">
    <table id="invoices" class="table table-hover">
        <thead>
        <tr>
            <th>Date</th>
            <th class="text-nowrap">Invoice ID</th>
            <th class="text-nowrap">Order ID</th>
            <th class="text-nowrap">Forward to</th>
            <th class="text-nowrap text-end">Percentage to forward</th>
            <th class="text-nowrap">Invoice Status</th>
            <th class="text-nowrap text-end">Amount invoiced</th>
            <th class="text-nowrap text-end">Amount received</th>
            <th class="text-nowrap text-end">Amount forwarded</th>
            <th class="text-nowrap">Payout ID</th>
            <th class="text-nowrap">Forwarding Status</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var invoice in Model.Invoices)
        {
            <tr id="invoice_@invoice.InvoiceId" class="invoice-row">
                <td>@invoice.Date.ToBrowserDate()</td>
                <td class="text-break">
                    <a asp-controller="UIInvoice" asp-action="Invoice" class="invoice-details-link" asp-route-invoiceId="@invoice.InvoiceId">
                        @invoice.InvoiceId
                    </a>
                </td>
                <td>
                    <span class="wraptextAuto">@invoice.OrderId</span>
                </td>


                <td>
                    @invoice.AutoForwardToAddress
                </td>

                <td class="text-end">
                    @(invoice.AutoForwardPercentage * 100) %
                </td>

                <td>
                    <span class="badge badge-@invoice.Status.Status.ToModernStatus().ToString().ToLower()">
                        @invoice.Status.Status.ToModernStatus().ToString()
                        @if (invoice.Status.ExceptionStatus != InvoiceExceptionStatus.None)
                        {
                            @($"({invoice.Status.ExceptionStatus.ToString()})")
                        }
                    </span>

                    @foreach (var paymentType in invoice.Payments.Select(payment => payment.GetPaymentMethodId()?.PaymentType).Distinct().Where(type => type != null && !string.IsNullOrEmpty(type.GetBadge())))
                    {
                        <span class="badge">@paymentType.GetBadge()</span>
                    }
                    @if (invoice.HasRefund)
                    {
                        <span class="badge bg-warning">Refund</span>
                    }
                </td>


                <td class="text-end text-nowrap">@DisplayFormatter.Currency(invoice.Amount, invoice.Currency)</td>

                <td class="text-end">
                    @DisplayFormatter.Currency(invoice.AmountReceived.ToDecimal(MoneyUnit.BTC), invoice.AmountReceivedCryptoCode)
                </td>

                <!-- Amount forwarded -->
                <td class="text-end">

                </td>

                <!-- Forwarding status -->
                <td>

                </td>

                <td></td>
                <td></td>
                <td></td>
                <td>
                    @invoice.AutoForwardPayoutId
                </td>
                <td></td>
            </tr>
        }
        </tbody>
    </table>
</div>

<vc:pager view-model="Model"/>



@* <h2>Totals</h2> *@
@* - Total received *@
@* - Total to be forwarded *@
@* - Total already forwarded *@
@* --> *@
@* *@
@* <!-- *@
@* *@
@* *@
@* <a href="https://twitter.com/NicolasDorier/status/1307221679014256640"> *@
@*     <img src="/Resources/img/screengrab.png"/> *@
@* </a> *@
@* *@
@* *@
@* <h2>Persisted Data</h2> *@
@* <p> *@
@*     The following is data persisted to the configured database but in an isolated DbContext. *@
@*     Every time you start BTCPay Server with this plugin enabled, a timestamp is logged. *@
@* </p> *@
@* <ul class="list-group"> *@
@*     @foreach (var item in Model.Data) *@
@*     { *@
@*         <li class="list-group-item">@item.Id at @item.Timestamp.ToString("F")</li> *@
@*     } *@